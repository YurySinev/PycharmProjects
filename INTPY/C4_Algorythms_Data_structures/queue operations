ОЧЕРЕДЬ

В отличие от стека он работает по принципу FIFO — First In First Out
(первый вошёл — первый вышел).

Очередь может быть реализована как на массивах, так и на списках.
В связи с наличием динамического массива в Python (list) попробуем
построить очередь, используя эту структуру данных. Она имеет своё
ограничение из-за того, что удаление из конца или вставка элемента
в начало имеют сложность O(n).

Чтобы обойти это ограничение, зафиксируем несколько свойств очереди:

1. Определим максимальную длину очереди — N_max.
2. При переполнении будем запрещать добавление элементов в очередь.
3. Зафиксируем два указателя:  head (начало) и tail (хвост) очереди.
4. Закольцуем очередь таким образом, что если указатель tail >= n_max,
то мы перемещаем его в начало.

По такой схеме может получиться так, что начало очереди
в конце списка, а хвост — в его начале.

Для очереди можно определить несколько операций:

1. Вставка элемента в хвост очереди (push).
2. Получение элемента из начала очереди (top).
3. Удаление элемента из начала очереди (pop).
4. Проверка наличия элементов в очереди (is_empty).
5. Получение размера очереди (size).

Все они выполняются за O(1). И это то, что нужно!

см. test4.4.6