Коммит — это состояние репозитория в определённый момент времени. Именно к коммиту
мы можем возвращаться, чтобы посмотреть состояние объектов в какое-то время.

Создание коммита

Чтобы добавить все файлы, которые находятся в директории, выполните следующую команду:

    git add -A

В будущем, чтобы добавлять отдельные файлы, используйте ту же команду add, но с указанием имени файла:

    git add this.js

Но пока мы только собрали все те файлы, изменения в которых нам важны. Теперь их надо обвязать
общей верёвочкой и единым ярлыком, то есть собрать их в коммит. Для этого необходимо выполнить
следующую команду:

    git commit -m "Init Skillfactory"

git commit — команда, которая создаёт коммит с рядом параметров. Флаг -m означает, что следом идёт
сообщение (message): ярлык для наших изменений. Проверим еще раз проверим статус репозитория:
    git status

-----------------------------------------

Содержимое директории .git

Рассмотрим, что содержится в папках и файлах:

config                  настройки данного репозитория. Его содержимое представлено
                            в текстовом формате.
HEAD                    указывает на текущую ветку.
index                   содержимое индекса.
objects     база данных объектов Git. Если открыть каталог objects, то в нём будут находиться
            каталоги, имена которых представлены двумя шестнадцатеричными числами, внутри них будут файлы,
            имена которых представлены 38 шестнадцатеричными числами. Вместе имя каталога и файл образуют
            40-разрядный хеш, взятый от имени файла и его содержимого.
refs        ссылки на объекты коммитов в этой базе (ветки).
logs        логи коммитов.
info        файл с глобальными настройкам игнорирования файлов. Он позволяет исключить файлы, которые
            вы не хотите помещать в .gitignore. Позднее мы остановимся на назначении файла .gitignore.
hooks       клиентские и серверные триггеры. Желающие прочитать про них могут обратиться к руководству по Git.


