#
# map
#
# Функция map пришла из функционального программирования. Она позволяет применять некую
# функцию к каждому элементу итерируемого объекта (строки, списки, кортежи, словари).
#
# Вот псевдокод, по которому работает map. Псевдокод — компактный, зачастую неформальный,
# способ описания алгоритмов, использующий ключевые слова языков программирования,
# но опускающий несущественные для понимания алгоритма подробности и специфический синтаксис.

# def map_(func, some_list):
#    # some_list объект, над которым будет производиться преобразование
#    # func функция, которая должна выполняться над каждым объектом
#     outp = []
#     for i in range(len(some_list)):
#         outp.append(func(some_list[i]))
#     return outp

# Чтобы не использовать такую конструкцию каждый раз, введена встроенная функция:
#
# map(function, iter1, iter2, ...)
#
# iter1, iter2, ... — может быть 1 и более итерируемых объектов, однако на вход функции
# должно приходить такое же количество аргументов.
# function — ссылка на функцию.
#
# Но особенность функции map в том, что она возвращает результат вычислений не сразу,
# а в виде итератора, который в дальнейшем производит «ленивые» вычисления. Чтобы получить
# список значений, нужно в явном виде привести к нужному типу либо воспользоваться циклом for:
#
a_list = [1, 2, 3]
def pow_(x):
    return x**2
#
print(list(map(pow_, a_list)))  # [1, 4, 9]
#
for i in map(pow_, a_list):
    print(i, end=' ')

print()
#
# Задание 5.5.1
# С помощью метода строки str.lower перевести все элементы списка в нижний регистр.

L = ['THIS', 'IS', 'LOWER', 'STRING']
print(list(map(str.lower, L)))

# (см. дальше test552_filter.py)
