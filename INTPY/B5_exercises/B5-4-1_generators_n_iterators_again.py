# Теперь попробуем написать генератор для приближённого вычисления числа e = 2.718.
# Для нахождения числа, удовлетворяющего необходимой точности, будем использовать следующий цикл:

# last = 5
# for a in e():                       # e() - генератор
#     if (a - last) < 0.00000001:     # ограничение на точность
#         print(a)
#         break                       # после достижения которого завершаем цикл
#     else:
#         last = a                    # иначе - присваиваем новое значение
#
# Для вычисления числа e с определённой точностью можно использовать формулу:
#
#           e_n = (1 + 1/n)**n
#
# В этой формуле число n — натуральное (1, 2, 3 и т. д.).

# Задание 5.4.13
# Реализуйте функцию-генератор, каждое значение которого — приближение числа e с некоторым числом n.

def e():
    n = 1
    while True:
        yield (1 + 1 / n) ** n
        n += 1

last = 0
for a in e():                       # e() - генератор
    if (a - last) < 0.00000001:     # ограничение на точность
        print(a)
        break                       # после достижения которого завершаем цикл
    else:
        last = a                    # иначе - присваиваем новое значение

iter_obj = iter("Hello!")

print(next(iter_obj))
print(next(iter_obj))
print(next(iter_obj))
print(next(iter_obj))
print(next(iter_obj))
print(next(iter_obj))


yesno = input("""Введите Y, если хотите авторизоваться, или N, 
             если хотите продолжить работу как анонимный пользователь: """)

auth = yesno == "Y"


def is_auth(func):
    def wrapper():
        if auth:
            print("Пользователь авторизован")
            func()
        else:
            print("Пользователь не авторизован. Функция выполнена не будет")
    return wrapper

@is_auth
def from_db():
    print("some data from database")